data:
  env: config-eureka-dev
  version: 1.0.2

server:
  port: 8804
spring:
  application:
    name: feign-consumer


# ribbon负载均衡配置 com.netflix.loadbalancer.RoundRobinRule ：循环选择每个应用（默认配置）      com.netflix.loadbalancer.RandomRule  ：随机选择一个应用
#com.netflix.loadbalancer.AvailabilityFilteringRule ：此规则将跳过被视为“电路跳闸”或具有高并发连接数的服务器。默认情况下，如果RestClient最近三次无法与其建立连接，则实例会跳闸。一旦实例电路跳闸，它将在电路被认为再次关闭之前保持这种状态30秒。然而，如果它继续连接失败，它将再次“电路跳闸”并且它变为“电路闭合”的等待时间将指数增加到连续故障的数量。
#com.netflix.loadbalancer.WeightedResponseTimeRule ：对于此规则，每个服务器根据其平均响应时间给予权重。响应时间越长，重量就越小。该规则随机选择服务器，其中可能性由服务器的权重决定。
ribbon-provider:
  ribbon:
    ConnectTimeout: 2500 # Ribbon的连接超时时间
    ReadTimeout: 10000 # Ribbon的数据读取超时时间
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule


#ribbon:
#  # 同一实例最大重试次数，不包括首次调用。默认值为0
#  MaxAutoRetries: 0
#  # 同一个微服务其他实例的最大重试次数，不包括第一次调用的实例。默认值为1
#  MaxAutoRetriesNextServer: 0
#  # 是否所有操作（GET、POST等）都允许重试。默认值为false
#  OkToRetryOnAllOperations: false


hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMillisecond: 6000 # 熔断超时时长：6000ms

feign:
  hystrix:
    enabled: true # 开启Feign的熔断功能   默认超时1000ms熔断
  compression:
      request:
        enabled: true # 开启请求压缩
        mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
        min-request-size: 2048 # 设置触发压缩的大小下限
      response:
        enabled: true # 开启响应压缩

logging:
  level:
    com.cloud.feign.rpc.GetHello: debug
